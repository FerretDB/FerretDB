---
name: Integration
on:
  pull_request:
    types:
      - unlabeled # if GitHub Actions stuck, add and remove "no ci" label to force rebuild
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
  schedule:
    - cron: "12 3 * * *" # after Docker workflow

env:
  GOPATH: /home/runner/go
  GOCACHE: /home/runner/go/cache
  GOLANGCI_LINT_CACHE: /home/runner/go/cache/lint
  GOMODCACHE: /home/runner/go/mod
  GOPROXY: https://proxy.golang.org

  # Temporary workaround for https://github.com/codecov/codecov-action/issues/837
  CODECOV_TOKEN: 1e257034-a484-4a13-abdf-009e769b909b
  # CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  test:
    name: Test ${{ matrix.name }}
    runs-on: ubuntu-20.04

    if: github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'no ci')

    strategy:
      fail-fast: false
      matrix:
        include:
          - {name: "PostgreSQL", task: "pg"}
          - {name: "Tigris", task: "tigris"}
          - {name: "Tigris main", task: "tigris", tigris_dockerfile: "tigris_main"}
          - {name: "CockroachDB", task: "cockroach"}
          - {name: "MongoDB", task: "mongodb"}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: FerretDB/github-actions/setup-go@main
        with:
          cache-key: test

      - name: Install Task
        run: go generate -x
        working-directory: tools

      - name: Start environment
        run: bin/task env-up-detach
        env:
          TIGRIS_DOCKERFILE: ${{ matrix.tigris_dockerfile }}

      - name: Run init
        run: bin/task init

      - name: Wait for and setup environment
        run: bin/task env-setup

      - name: Run ${{ matrix.task }} tests
        run: bin/task test-integration-${{ matrix.task }}

      # The token is not required but should make uploads more stable.
      # See https://github.com/codecov/codecov-action/issues/837.
      # If secrets are unavailable (for example, for a pull request from a fork), it fallbacks to the tokenless uploads.
      - name: Upload coverage information
        uses: codecov/codecov-action@v3
        with:
          token: ${{ env.CODECOV_TOKEN }}
          files: ./integration/integration-${{ matrix.task }}.txt
          flags: integration,${{ matrix.task }}
          fail_ci_if_error: true
          verbose: true

      # we don't want them on CI
      - name: Clean test and fuzz caches
        if: always()
        run: |
          go clean -testcache -fuzzcache

      - name: Check dirty
        run: |
          git status
          git diff --exit-code
