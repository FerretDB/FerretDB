---
name: Integration # visible at https://github.com/FerretDB/FerretDB/actions
on:
  workflow_call:
    inputs:
      task:
        required: true
        type: string
      shard_index:
        required: true
        type: number
      shard_total:
        required: true
        type: number
      coveralls:
        required: false
        type: boolean
        default: false
      test_timeout:
        required: false
        type: string
        default: 20m
      no_xfail:
        required: false
        type: boolean
        default: false
      checkout_ref:
        required: false
        type: string
        default: ""

env:
  GOPATH: /home/runner/go
  GOCACHE: /home/runner/go/cache
  GOLANGCI_LINT_CACHE: /home/runner/go/cache/lint
  GOMODCACHE: /home/runner/go/mod
  GOPROXY: https://proxy.golang.org
  GOTOOLCHAIN: local

jobs:
  run:
    # make it short to fit in GitHub UI; all parameters are already in the caller's name
    name: Run

    # https://www.ubicloud.com/docs/about/pricing#github-actions
    # https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions#per-minute-rates-for-larger-runners
    runs-on: ubicloud-standard-4

    timeout-minutes: 25

    steps:
      # TODO https://github.com/FerretDB/github-actions/issues/211
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # for `git describe` to work
          lfs: false # LFS is used only by website
          ref: ${{ inputs.checkout_ref }}

      # for branch.txt on pull_request_target; the correct branch is already checked out on push / schedule
      - name: Name branch
        if: github.event_name == 'pull_request_target'
        env:
          BRANCH: ${{ github.head_ref }} # see https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
        run: git checkout -b $BRANCH

      - name: Setup Go
        uses: FerretDB/github-actions/setup-go@main
        with:
          cache-key: integration

      - name: Install Task
        run: go generate -x
        working-directory: tools

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start environment
        run: bin/task env-up-detach

      - name: Run init
        run: bin/task init

      - name: Wait for and setup environment
        run: bin/task env-setup

      - name: >
          Run ${{ inputs.task }} tests
          (${{ inputs.shard_index }}/${{ inputs.shard_total }})
        run: >
          bin/task test-integration-${{ inputs.task }}
          SHARD_INDEX=${{ inputs.shard_index }}
          SHARD_TOTAL=${{ inputs.shard_total }}
          TEST_TIMEOUT=${{ inputs.test_timeout }}
          NO_XFAIL=${{ inputs.no_xfail }}
        env:
          ENVTOOL_DEBUG: ${{ runner.debug == '1' && 'true' || 'false' }}

      - name: Collect logs
        if: failure()
        run: |
          mkdir -p /tmp/logs
          bin/task env-logs-collect > /tmp/logs/compose-logs.txt
          cp -v integration/*.json.tmp integration/*.txt.tmp /tmp/logs/

      - name: Compress logs before upload
        if: failure()
        run: zip -r -q -9 logs.zip /tmp/logs

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ inputs.task }}-${{ inputs.shard_index }}-${{ inputs.shard_total }}
          path: logs.zip
          retention-days: 3

      # we don't want them on CI
      - name: Clean test and fuzz caches
        if: always()
        run: go clean -testcache -fuzzcache

      - name: Check dirty
        if: always()
        run: |
          git status --untracked-files --ignored
          git status
          git diff --exit-code
