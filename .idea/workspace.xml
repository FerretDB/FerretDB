<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="95ef9b1d-dc1c-442f-a36d-6c4276c09e97" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/cmd/envtool/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/envtool/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/integration/create_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/integration/create_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/handlers/pg/pgdb/collections.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/handlers/pg/pgdb/collections.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/handlers/pg/pgdb/databases.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/handlers/pg/pgdb/databases.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/handlers/pg/pgdb/insert.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/handlers/pg/pgdb/insert.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/handlers/pg/pgdb/pgdb_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/handlers/pg/pgdb/pgdb_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/handlers/pg/pgdb/query_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/handlers/pg/pgdb/query_test.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///nix/store/z99pbnhp88lfciv791fmi1283rv51qhz-go-1.19.2/share/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2HN0DGqTJrEI4Hkwb1KmCqAR9pS" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/user/FerretDB&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;
  }
}</component>
  <component name="RunManager" selected="Go Test.TestCreateOnInsertStressDiffCollection in github.com/FerretDB/FerretDB/integration">
    <configuration name="go build github.com/FerretDB/FerretDB/cmd/ferretdb" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="FerretDB" />
      <working_directory value="$PROJECT_DIR$" />
      <envs>
        <env name="FERRETDB_POSTGRESQL_URL" value="asdfasdf" />
      </envs>
      <kind value="PACKAGE" />
      <package value="github.com/FerretDB/FerretDB/cmd/ferretdb" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/ferretdb/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestCreateOnInsertStressDiffCollection in github.com/FerretDB/FerretDB/integration" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="FerretDB" />
      <working_directory value="$PROJECT_DIR$/integration" />
      <kind value="PACKAGE" />
      <package value="github.com/FerretDB/FerretDB/integration" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCreateOnInsertStressDiffCollection\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestCreateOnInsertStressSameCollection in github.com/FerretDB/FerretDB/integration" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="FerretDB" />
      <working_directory value="$PROJECT_DIR$/integration" />
      <kind value="PACKAGE" />
      <package value="github.com/FerretDB/FerretDB/integration" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCreateOnInsertStressSameCollection\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestNewReporterLock in github.com/FerretDB/FerretDB/internal/util/telemetry" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="FerretDB" />
      <working_directory value="$PROJECT_DIR$/internal/util/telemetry" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/FerretDB/FerretDB/internal/util/telemetry" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestNewReporterLock\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestNewReporterLock/ExecName in github.com/FerretDB/FerretDB/internal/util/telemetry" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="FerretDB" />
      <working_directory value="$PROJECT_DIR$/internal/util/telemetry" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/FerretDB/FerretDB/internal/util/telemetry" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestNewReporterLock\E$/^\QExecName\E$" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build github.com/FerretDB/FerretDB/cmd/ferretdb" />
      <item itemvalue="Go Test.TestCreateOnInsertStressDiffCollection in github.com/FerretDB/FerretDB/integration" />
      <item itemvalue="Go Test.TestCreateOnInsertStressSameCollection in github.com/FerretDB/FerretDB/integration" />
      <item itemvalue="Go Test.TestNewReporterLock/ExecName in github.com/FerretDB/FerretDB/internal/util/telemetry" />
      <item itemvalue="Go Test.TestNewReporterLock in github.com/FerretDB/FerretDB/internal/util/telemetry" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestCreateOnInsertStressDiffCollection in github.com/FerretDB/FerretDB/integration" />
        <item itemvalue="Go Test.TestCreateOnInsertStressSameCollection in github.com/FerretDB/FerretDB/integration" />
        <item itemvalue="Go Build.go build github.com/FerretDB/FerretDB/cmd/ferretdb" />
        <item itemvalue="Go Test.TestNewReporterLock/ExecName in github.com/FerretDB/FerretDB/internal/util/telemetry" />
        <item itemvalue="Go Test.TestNewReporterLock in github.com/FerretDB/FerretDB/internal/util/telemetry" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/cmd/ferretdb/main.go</url>
          <line>124</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/internal/handlers/pg/pgdb/databases.go</url>
          <line>96</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/internal/handlers/pg/pgdb/databases.go</url>
          <line>88</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>