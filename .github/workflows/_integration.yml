---
name: Integration # visible at https://github.com/FerretDB/FerretDB/actions
on:
  workflow_call:
    inputs:
      task:
        required: true
        type: string
      shard_index:
        required: true
        type: number
      shard_total:
        required: true
        type: number
      coveralls:
        required: true
        type: boolean
      disable_pushdown:
        required: false
        type: boolean
        default: false
      postgres_dockerfile:
        required: false
        type: string
        default: "postgres"
      checkout_ref:
        required: false
        type: string
        default: ""
    secrets:
      FERRETDB_HANA_URL:
        required: false

env:
  GOPATH: /home/runner/go
  GOCACHE: /home/runner/go/cache
  GOLANGCI_LINT_CACHE: /home/runner/go/cache/lint
  GOMODCACHE: /home/runner/go/mod
  GOPROXY: https://proxy.golang.org
  GOTOOLCHAIN: local

jobs:
  run:
    # make it short to fit in GitHub UI; all parameters are already in the caller's name
    name: Run

    # https://www.ubicloud.com/docs/about/pricing#github-actions
    # https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions#per-minute-rates-for-larger-runners
    runs-on: ubicloud-standard-4

    timeout-minutes: 25

    steps:
      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}

      # TODO https://github.com/FerretDB/github-actions/issues/211
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # for `git describe` to work
          lfs: false # LFS is used only by website
          ref: ${{ inputs.checkout_ref }}

      # for branch.txt on pull_request_target; the correct branch is already checked out on push / schedule
      - name: Name branch
        if: github.event_name == 'pull_request_target'
        env:
          BRANCH: ${{ github.head_ref }} # see https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
        run: git checkout -b $BRANCH

      - name: Setup Go
        uses: FerretDB/github-actions/setup-go@main
        with:
          cache-key: integration

      - name: Install Task
        run: go generate -x
        working-directory: tools

      - name: Start environment
        run: bin/task env-up-detach
        env:
          POSTGRES_DOCKERFILE: ${{ inputs.postgres_dockerfile }}

      - name: Run init
        run: bin/task init

      - name: Wait for and setup environment
        run: bin/task env-setup

      - name: >
          Run ${{ inputs.task }} tests
          (${{ inputs.shard_index }}/${{ inputs.shard_total }},
          pushdown=${{ !inputs.disable_pushdown }})
        run: >
          bin/task test-integration-${{ inputs.task }}
          SHARD_INDEX=${{ inputs.shard_index }}
          SHARD_TOTAL=${{ inputs.shard_total }}
          TEST_TIMEOUT=20m
          DISABLE_PUSHDOWN=${{ inputs.disable_pushdown }}
        env:
          GOFLAGS: ${{ runner.debug == '1' && '-v' || '' }}
          FERRETDB_HANA_URL: ${{ secrets.FERRETDB_HANA_URL }}

      # The token is not required but should make uploads more stable.
      # If secrets are unavailable (for example, for a pull request from a fork), it fallbacks to the tokenless uploads.
      #
      # Unfortunately, it seems that tokenless uploads fail too often.
      # See https://github.com/codecov/codecov-action/issues/837.
      #
      # We also can't use ${{ vars.CODECOV_TOKEN }}: https://github.com/orgs/community/discussions/44322
      - name: Upload coverage information to codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          token: 3c5cbd1b-5110-4302-ad5a-080390ca731a
          files: ./integration/integration-${{ inputs.task }}.txt
          flags: integration,${{ inputs.task }}-${{ inputs.shard_index }},filter-${{ !inputs.disable_pushdown }}
          fail_ci_if_error: true
          verbose: true

      - name: Upload coverage information to coveralls
        if: always() && inputs.coveralls
        uses: coverallsapp/github-action@v2
        with:
          file: ./integration/integration-${{ inputs.task }}.txt
          flag-name: integration-${{ inputs.task }}-${{ inputs.shard_index }}-filter-${{ !inputs.disable_pushdown }}
          parallel: true

      # we don't want them on CI
      - name: Clean test and fuzz caches
        if: always()
        run: go clean -testcache -fuzzcache

      - name: Check dirty
        run: |
          git status
          git diff --exit-code
