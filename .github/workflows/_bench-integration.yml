---
name: Bench Integration # visible at https://github.com/FerretDB/FerretDB/actions
on:
  workflow_call:
    inputs:
      task:
        required: true
        type: string
      disable_filter_pushdown:
        required: false
        type: boolean
        default: false
      enable_unsafe_sort_pushdown:
        required: false
        type: boolean
        default: false
      checkout_ref:
        required: false
        type: string
        default: ""
    secrets:
      FERRETDB_HANA_URL:
        required: false

env:
  GOPATH: /home/runner/go
  GOCACHE: /home/runner/go/cache
  GOLANGCI_LINT_CACHE: /home/runner/go/cache/lint
  GOMODCACHE: /home/runner/go/mod
  GOPROXY: https://proxy.golang.org
  GOTOOLCHAIN: local

jobs:
  bench:
    # make it short to fit in GitHub UI; all parameters are already in the caller's name
    name: Bench
    runs-on: server
    timeout-minutes: 30

    steps:
      - name: Setup permissions monitoring
        uses: GitHubSecurityLab/actions-permissions/monitor@v1
        if: false

      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}

      # TODO https://github.com/FerretDB/github-actions/issues/211
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # for `git describe` to work
          lfs: false # LFS is used only by website
          ref: ${{ inputs.checkout_ref }}

      # for branch.txt on pull_request_target; `main` is already checked out on push / schedule
      - name: Name branch
        if: github.event_name == 'pull_request_target'
        env:
          BRANCH: ${{ github.head_ref }} # see https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
        run: git checkout -b $BRANCH

      - name: Setup Go
        uses: FerretDB/github-actions/setup-go@main
        with:
          cache-key: integration

      - name: Install Task
        run: go generate -x
        working-directory: tools

      - name: Start environment
        run: bin/task env-pull env-up-detach

      - name: Run init
        run: bin/task init

      - name: Wait for and setup environment
        run: bin/task env-setup

      - name: >
          Run ${{ inputs.task }}
          filter=${{ !inputs.disable_filter_pushdown }}, unsafe-sort=${{ inputs.enable_unsafe_sort_pushdown }})
        run: >
          ../bin/task bench-integration-${{ inputs.task }}
          DISABLE_FILTER_PUSHDOWN=${{ inputs.disable_filter_pushdown }}
          ENABLE_UNSAFE_SORT_PUSHDOWN=${{ inputs.enable_unsafe_sort_pushdown }}
        working-directory: integration
        env:
          GOFLAGS: ${{ runner.debug == '1' && '-v' || '' }}
          FERRETDB_HANA_URL: ${{ secrets.FERRETDB_HANA_URL }}

      - name: Stop environment
        if: always()
        run: bin/task env-down

      # we don't want them on CI
      - name: Clean test and fuzz caches
        if: always()
        run: go clean -testcache -fuzzcache

      - name: Check dirty
        run: |
          git status
          git diff --exit-code
