---
name: Go
on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '42 3 * * *'

env:
  GOPATH: /home/runner/go
  GOCACHE: /home/runner/go/cache
  GOMODCACHE: /home/runner/go/cache/mod
  GOPROXY: https://proxy.golang.org # remove direct

jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Start pulling environment in the background
        run: make env-pull &

      - name: Setup Go
        uses: FerretDB/github-actions/setup-go@main
        with:
          cache-key: test

      - name: Start environment
        run: make env-up-detach

      - name: Run init
        run: make init

      - name: Wait for and setup environment
        run: make env-setup

      - name: Run tests
        run: make test

      - name: Upload coverage information
        uses: codecov/codecov-action@v2
        with:
          files: ./cover.txt

      - name: Check dirty
        run: |
          git status
          git diff --exit-code

  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: FerretDB/github-actions/setup-go@main
        with:
          cache-key: lint

      - name: Run init
        run: make init

      - name: Format code
        run: make fmt

      - name: Run required linters
        uses: golangci/golangci-lint-action@v2
        if: ${{ false }} # skip until golangci-lint is recompiled with Go 1.18
        with:
          version: v1.43 # sync with tools/go.mod
          args: --config=.golangci-required.yml
          only-new-issues: false
          skip-go-installation: true
          skip-pkg-cache: true
          skip-build-cache: true

      - name: Run all linters
        uses: golangci/golangci-lint-action@v2
        if: ${{ false }} # skip until golangci-lint is recompiled with Go 1.18
        with:
          version: v1.43 # sync with tools/go.mod
          args: --config=.golangci.yml
          only-new-issues: true
          skip-go-installation: true
          skip-pkg-cache: true
          skip-build-cache: true

      - name: Run linters manually
        run: make lint

      - name: Check dirty
        run: |
          git status
          git diff --exit-code

  fuzz:
    name: Fuzz
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: FerretDB/github-actions/setup-go@main
        with:
          cache-key: fuzz

      - name: Run init
        run: make init

      # precompile tests with unset GOMAXPROCS
      - name: Init fuzzers
        run: make fuzz-init

      - name: Run fuzzers
        run: make fuzz-short
        continue-on-error: true # FIXME
        env:
          GOMAXPROCS: 2 # otherwise, oom-killer kills fuzzer too often

      - name: Collect Linux logs
        # if: failure() FIXME
        run: |
          mkdir -p /tmp/logs
          ls -al /var/log/
          sudo cp /var/log/syslog /tmp/logs/
          sudo free > /tmp/logs/free.txt
          sudo chmod 0666 /tmp/logs/*

      - name: Upload Linux logs
        # if: failure() FIXME
        uses: actions/upload-artifact@v2
        with:
          name: linux-logs
          path: /tmp/logs

      - name: Upload fuzz corpus
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: fuzz-corpus
          path: |
            ${{ env.GOCACHE }}/fuzz
            **/testdata/fuzz

      - name: Check dirty
        run: |
          git status
          git diff --exit-code
