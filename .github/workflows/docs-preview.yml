---
name: Docs
on:
  pull_request_target:
    types:
      - labeled # for `trusted` label
      - unlabeled
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
      - cloudflare-pages # FIXME
  schedule:
    - cron: "42 3 * * *" # after Integration workflow

# Do not run this workflow in parallel for any PR change or push to main
# to prevent XXX FIXME
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}

env:
  GOPATH: /home/runner/go
  GOCACHE: /home/runner/go/cache
  GOLANGCI_LINT_CACHE: /home/runner/go/cache/lint
  GOMODCACHE: /home/runner/go/mod
  GOPROXY: https://proxy.golang.org

jobs:
  build:
    name: Build docs
    runs-on: ubuntu-22.04

    if: github.event_name != 'pull_request_target' || !contains(github.event.pull_request.labels.*.name, 'no ci')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Check LFS status
        if: false # TODO https://github.com/ActionsDesk/lfs-warning/issues/147
        uses: actionsdesk/lfs-warning@v3.2
        with:
          filesizelimit: 1MB

      - name: Setup Go
        uses: FerretDB/github-actions/setup-go@main
        with:
          cache-key: build

      - name: Install Task
        run: go generate -x
        working-directory: tools

      - name: Build tools
        run: bin/task env-pull

      - name: Build docs
        run: bin/task docs

      - name: Archive docs
        run: |
          tar --directory website/build \
            --file docs.tar \
            --create \
            --verbose \
            .

      - name: Upload archive artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs.tar
          if-no-files-found: error

      - name: Check dirty
        run: |
          git status
          git diff --exit-code

  github:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-22.04

    # deploy only on push to main; exclude pull_request_target and schedule
    needs: build
    if: github.event_name == 'push'

    permissions:
      pages: write
      id-token: write

    environment:
      name: pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v1
        with:
          artifact_name: docs
          timeout: 300000 # 5*60*1000 milliseconds
