
{
  "Checksum": 0,
  "FlagBits": [],
  "Sections": [
    {
      "Document": {
        "$k": [
          "commands",
          "ok"
        ],
        "commands": {
          "$k": [
            "abortTransaction",
            "aggregate",
            "appendOplogNote",
            "applyOps",
            "authenticate",
            "autoSplitVector",
            "availableQueryOptions",
            "buildInfo",
            "checkShardingIndex",
            "cleanupOrphaned",
            "cloneCollectionAsCapped",
            "collMod",
            "collStats",
            "commitTransaction",
            "compact",
            "connPoolStats",
            "connPoolSync",
            "connectionStatus",
            "convertToCapped",
            "coordinateCommitTransaction",
            "count",
            "create",
            "createIndexes",
            "createRole",
            "createUser",
            "currentOp",
            "dataSize",
            "dbHash",
            "dbStats",
            "delete",
            "distinct",
            "donorAbortMigration",
            "donorForgetMigration",
            "donorStartMigration",
            "driverOIDTest",
            "drop",
            "dropAllRolesFromDatabase",
            "dropAllUsersFromDatabase",
            "dropConnections",
            "dropDatabase",
            "dropIndexes",
            "dropRole",
            "dropUser",
            "endSessions",
            "explain",
            "features",
            "filemd5",
            "find",
            "findAndModify",
            "flushRouterConfig",
            "fsync",
            "fsyncUnlock",
            "getCmdLineOpts",
            "getDatabaseVersion",
            "getDefaultRWConcern",
            "getDiagnosticData",
            "getFreeMonitoringStatus",
            "getLastError",
            "getLog",
            "getMore",
            "getParameter",
            "getShardMap",
            "getShardVersion",
            "getnonce",
            "grantPrivilegesToRole",
            "grantRolesToRole",
            "grantRolesToUser",
            "hello",
            "hostInfo",
            "insert",
            "internalRenameIfOptionsAndIndexesMatch",
            "invalidateUserCache",
            "isMaster",
            "killAllSessions",
            "killAllSessionsByPattern",
            "killCursors",
            "killOp",
            "killSessions",
            "listCollections",
            "listCommands",
            "listDatabases",
            "listIndexes",
            "lockInfo",
            "logRotate",
            "logout",
            "mapReduce",
            "mergeChunks",
            "moveChunk",
            "ping",
            "planCacheClear",
            "planCacheClearFilters",
            "planCacheListFilters",
            "planCacheSetFilter",
            "prepareTransaction",
            "profile",
            "reIndex",
            "recipientForgetMigration",
            "recipientSyncData",
            "refreshSessions",
            "renameCollection",
            "repairDatabase",
            "replSetAbortPrimaryCatchUp",
            "replSetFreeze",
            "replSetGetConfig",
            "replSetGetRBID",
            "replSetGetStatus",
            "replSetHeartbeat",
            "replSetInitiate",
            "replSetMaintenance",
            "replSetReconfig",
            "replSetRequestVotes",
            "replSetResizeOplog",
            "replSetStepDown",
            "replSetStepUp",
            "replSetSyncFrom",
            "replSetUpdatePosition",
            "revokePrivilegesFromRole",
            "revokeRolesFromRole",
            "revokeRolesFromUser",
            "rolesInfo",
            "rotateCertificates",
            "saslContinue",
            "saslStart",
            "serverStatus",
            "setDefaultRWConcern",
            "setFeatureCompatibilityVersion",
            "setFreeMonitoring",
            "setIndexCommitQuorum",
            "setParameter",
            "setShardVersion",
            "shardingState",
            "shutdown",
            "splitChunk",
            "splitVector",
            "startRecordingTraffic",
            "startSession",
            "stopRecordingTraffic",
            "top",
            "update",
            "updateRole",
            "updateUser",
            "usersInfo",
            "validate",
            "validateDBMetadata",
            "voteCommitIndexBuild",
            "waitForFailPoint",
            "whatsmyuri"
          ],
          "abortTransaction": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Aborts a transaction",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "aggregate": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Runs the aggregation command. See http://dochub.mongodb.org/core/aggregation for more details.",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "secondaryOverrideOk": true,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "appendOplogNote": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Adds a no-op entry to the oplog",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "applyOps": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "internal (sharding)\n{ applyOps : [ ] , preCondition : [ { ns : ... , q : ... , res : ... } ] }",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "authenticate": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": false,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "autoSplitVector": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Internal command returning the split points for a chunk, given the maximum chunk size.",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "availableQueryOptions": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "buildInfo": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "get version #, etc.\n{ buildinfo:1 }",
            "requiresAuth": false,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "checkShardingIndex": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Internal command.\n",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "cleanupOrphaned": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "cloneCollectionAsCapped": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "{ cloneCollectionAsCapped:\u003cfromName\u003e, toCollection:\u003ctoName\u003e, size:\u003csizeInBytes\u003e }",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "collMod": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Sets collection options.\nExample: { collMod: 'foo', viewOn: 'bar'} Example: { collMod: 'foo', index: {keyPattern: {a: 1}, expireAfterSeconds: 600} Example: { collMod: 'foo', index: {name: 'bar', expireAfterSeconds: 600} }\n",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "collStats": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "{ collStats:\"blog.posts\" , scale : 1 } scale divides sizes e.g. for KB use 1024\n    avgObjSize - in bytes",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "commitTransaction": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Commits a transaction",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "compact": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "compact collection\nwarning: this operation locks the database and is slow. you can cancel with killOp()\n{ compact : \u003ccollection_name\u003e, [force:\u003cbool\u003e] }\n  force - allows to run on a replica set primary\n",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "connPoolStats": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "stats about connections between servers in a replica set or sharded cluster.",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "connPoolSync": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "internal",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "connectionStatus": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Returns connection-specific information such as logged-in users and their roles",
            "requiresAuth": false,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "convertToCapped": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "{ convertToCapped:\u003cfromCollectionName\u003e, size:\u003csizeInBytes\u003e }",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "coordinateCommitTransaction": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Coordinates the commit for a transaction. Only called by mongos.",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "count": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "count objects in collection",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "secondaryOverrideOk": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "create": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "explicitly creates a collection or view\n{\n  create: \u003cstring: collection or view name\u003e [,\n  capped: \u003cbool: capped collection\u003e,\n  autoIndexId: \u003cbool: automatic creation of _id index\u003e,\n  idIndex: \u003cdocument: _id index specification\u003e,\n  size: \u003cint: size in bytes of the capped collection\u003e,\n  max: \u003cint: max number of documents in the capped collection\u003e,\n  storageEngine: \u003cdocument: storage engine configuration\u003e,\n  validator: \u003cdocument: validation rules\u003e,\n  validationLevel: \u003cstring: validation level\u003e,\n  validationAction: \u003cstring: validation action\u003e,\n  indexOptionDefaults: \u003cdocument: default configuration for indexes\u003e,\n  viewOn: \u003cstring: name of source collection or view\u003e,\n  pipeline: \u003carray\u003cobject\u003e: aggregation pipeline stage\u003e,\n  collation: \u003cdocument: default collation for the collection or view\u003e,\n  writeConcern: \u003cdocument: write concern expression for the operation\u003e]\n}",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "createIndexes": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "createRole": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "createUser": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "currentOp": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "dataSize": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "determine data size for a set of data in a certain range\nexample: { dataSize:\"blog.posts\", keyPattern:{x:1}, min:{x:10}, max:{x:55} }\nmin and max parameters are optional. They must either both be included or both omitted\nkeyPattern is an optional parameter indicating an index pattern that would be usefulfor iterating over the min/max bounds. If keyPattern is omitted, it is inferred from the structure of min. \nnote: This command may take a while to run",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "dbHash": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "dbStats": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Get stats on a database. Not instantaneous. Slower for databases with large .ns files.\nExample: { dbStats:1, scale:1 }",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "delete": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "delete documents",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "distinct": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "{ distinct : 'collection name' , key : 'a.b' , query : {} }",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "secondaryOverrideOk": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "donorAbortMigration": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Abort a migration",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "donorForgetMigration": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Forget a migration",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "donorStartMigration": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Start migrating databases whose names match the specified prefix to the specified replica set.",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "driverOIDTest": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "drop": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "drop a collection\n{drop : \u003ccollectionName\u003e}",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "dropAllRolesFromDatabase": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "dropAllUsersFromDatabase": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "dropConnections": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Drop egress connections to specified host and port",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "dropDatabase": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "drop (delete) this database",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "dropIndexes": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "drop indexes for a collection",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "dropRole": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "dropUser": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "endSessions": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "end a set of logical sessions",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "explain": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "explain database reads and writes",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "secondaryOverrideOk": true,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "features": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "return build level feature settings",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "filemd5": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": " example: { filemd5 : ObjectId(aaaaaaa) , root : \"fs\" }",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "find": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "query for documents",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "secondaryOverrideOk": true,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "findAndModify": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "{ findAndModify: \"collection\", query: {processed:false}, update: {$set: {processed:true}}, new: true}\n{ findAndModify: \"collection\", query: {processed:false}, remove: true, sort: {priority:-1}}\nEither update or remove is required, all other fields have default values.\nOutput is in the \"value\" field\n",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "flushRouterConfig": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Flushes the cached routing information for a single collection, entire database (and its collections) or all databases, which would cause full reload from the config server on the next access.\nUsage:\n{flushRouterConfig: 1} flushes all databases\n{flushRouterConfig: 'db'} flushes only the given database (and its collections)\n{flushRouterconfig: 'db.coll'} flushes only the given collection",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "fsync": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "http://dochub.mongodb.org/core/fsynccommand",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "fsyncUnlock": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "getCmdLineOpts": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "get argv",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "getDatabaseVersion": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": " example: { getDatabaseVersion : 'foo'  } ",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "getDefaultRWConcern": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "get the current read/write concern defaults being applied by this node",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "getDiagnosticData": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "get latest diagnostic data collection snapshot",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "getFreeMonitoringStatus": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Indicates free monitoring status",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "getLastError": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "return error status of the last operation on this connection\noptions:\n  { fsync:true } - fsync before returning, or wait for journal commit if running with --journal\n  { j:true } - wait for journal commit if running with --journal\n  { w:n } - await replication to n servers (including self) before returning\n  { w:'majority' } - await replication to majority of set\n  { wtimeout:m} - timeout for w in m milliseconds",
            "requiresAuth": false,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "getLog": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "{ getLog : '*' }  OR { getLog : 'global' }",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "getMore": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "retrieve more results from an existing cursor",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "getParameter": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "get administrative option(s)\nexample:\n{ getParameter:1, notablescan:1 }\nsupported:\n  AlwaysRecordTraffic\n  KeysRotationIntervalSec\n  ShardingTaskExecutorPoolHostTimeoutMS\n  ShardingTaskExecutorPoolMaxConnecting\n  ShardingTaskExecutorPoolMaxSize\n  ShardingTaskExecutorPoolMinSize\n  ShardingTaskExecutorPoolRefreshRequirementMS\n  ShardingTaskExecutorPoolRefreshTimeoutMS\n  ShardingTaskExecutorPoolReplicaSetMatching\n  TransactionRecordMinimumLifetimeMinutes\n  acceptApiVersion2\n  aggregateOperationResourceConsumptionMetrics\n  allowRolesFromX509Certificates\n  authSchemaVersion\n  authenticationMechanisms\n  authorizationManagerCacheSize\n  authorizationManagerPinnedUsers\n  authorizationManagerPinnedUsersRefreshIntervalMillis\n  automationServiceDescriptor\n  awsEC2InstanceMetadataUrl\n  awsECSInstanceMetadataUrl\n  bgSyncOplogFetcherBatchSize\n  changeSyncSourceThresholdMillis\n  clientCursorMonitorFrequencySecs\n  cloudFreeMonitoringEndpointURL\n  clusterAuthMode\n  collectionBulkLoaderBatchSizeInBytes\n  collectionClonerBatchSize\n  collectionClonerUsesExhaust\n  connPoolMaxConnsPerHost\n  connPoolMaxInUseConnsPerHost\n  connectTimeoutMs\n  coordinateCommitReturnImmediatelyAfterPersistingDecision\n  createRollbackDataFiles\n  cursorTimeoutMillis\n  deprecatedWireOpsWarningPeriodInSeconds\n  diagnosticDataCollectionDirectoryPath\n  diagnosticDataCollectionDirectorySizeMB\n  diagnosticDataCollectionEnableLatencyHistograms\n  diagnosticDataCollectionEnabled\n  diagnosticDataCollectionFileSizeMB\n  diagnosticDataCollectionPeriodMillis\n  diagnosticDataCollectionSamplesPerChunk\n  diagnosticDataCollectionSamplesPerInterimUpdate\n  diagnosticDataCollectionVerboseTCMalloc\n  disableJavaScriptJIT\n  disableLogicalSessionCacheRefresh\n  disableNonSSLConnectionLogging\n  disableNonTLSConnectionLogging\n  disableResumableRangeDeleter\n  disableSplitHorizonIPCheck\n  disabledSecureAllocatorDomains\n  documentUnitSizeBytes\n  enableDefaultWriteConcernUpdatesForInitiate\n  enableElectionHandoff\n  enableFinerGrainedCatalogCacheRefresh\n  enableFlowControl\n  enableIndexBuildCommitQuorum\n  enableLocalhostAuthBypass\n  enableOverrideClusterChainingSetting\n  enableReconfigRollbackCommittedWritesCheck\n  enableResumableIndexBuilds\n  enableSearchMeta\n  enableShardedIndexConsistencyCheck\n  enableTestCommands\n  enableTimeoutOfInactiveSessionCursors\n  enforceUserClusterSeparation\n  featureCompatibilityVersion\n  featureFlagBlender\n  featureFlagChangeStreamsOptimization\n  featureFlagDefaultReadConcernLocal\n  featureFlagDefaultWriteConcernMajority\n  featureFlagDotsAndDollars\n  featureFlagFryer\n  featureFlagLockFreeReads\n  featureFlagResharding\n  featureFlagRetryableFindAndModify\n  featureFlagSearchMeta\n  featureFlagShardedTimeSeries\n  featureFlagShardedTimeSeriesUpdateDelete\n  featureFlagShardingFullDDLSupport\n  featureFlagSpoon\n  featureFlagTenantMigrations\n  featureFlagTimeseriesCollection\n  featureFlagTimeseriesUpdatesAndDeletes\n  featureFlagToaster\n  featureFlagUseSecondaryDelaySecs\n  findChunksOnConfigTimeoutMS\n  fixedServiceExecutorRecursionLimit\n  fixedServiceExecutorThreadLimit\n  flowControlDecayConstant\n  flowControlFudgeFactor\n  flowControlMaxSamples\n  flowControlMinTicketsPerSecond\n  flowControlSamplePeriod\n  flowControlTargetLagSeconds\n  flowControlThresholdLagPercentage\n  flowControlTicketAdderConstant\n  flowControlTicketMultiplierConstant\n  flowControlWarnThresholdSeconds\n  forceRollbackViaRefetch\n  globalConnPoolIdleTimeoutMinutes\n  heapProfilingEnabled\n  heapProfilingSampleIntervalBytes\n  heartBeatFrequencyMs\n  honorSystemUmask\n  indexEntryUnitSizeBytes\n  initialServiceExecutorThreadingModel\n  initialSyncOplogBuffer\n  initialSyncOplogBufferPeekCacheSize\n  initialSyncOplogFetcherBatchSize\n  initialSyncSourceReadPreference\n  initialSyncTransientErrorRetryPeriodSeconds\n  internalDocumentSourceCursorBatchSizeBytes\n  internalDocumentSourceGroupMaxMemoryBytes\n  internalDocumentSourceLookupCacheSizeBytes\n  internalDocumentSourceSetWindowFieldsMaxMemoryBytes\n  internalGeoNearQuery2DMaxCoveringCells\n  internalGeoPredicateQuery2DMaxCoveringCells\n  internalIndexBuildBulkLoadYieldIterations\n  internalInsertMaxBatchSize\n  internalLookupStageIntermediateDocumentMaxSizeBytes\n  internalPipelineLengthLimit\n  internalProhibitShardOperationRetry\n  internalQueryAllowShardedLookup\n  internalQueryAlwaysMergeOnPrimaryShard\n  internalQueryAppendIdToSetWindowFieldsSort\n  internalQueryCacheDisableInactiveEntries\n  internalQueryCacheEvictionRatio\n  internalQueryCacheMaxEntriesPerCollection\n  internalQueryCacheMaxSizeBytesBeforeStripDebugInfo\n  internalQueryCacheSize\n  internalQueryCacheWorksGrowthCoefficient\n  internalQueryDefaultDOP\n  internalQueryDesugarWhereToFunction\n  internalQueryDisableExchange\n  internalQueryEnableCSTParser\n  internalQueryEnableLoggingV2OplogEntries\n  internalQueryEnableSlotBasedExecutionEngine\n  internalQueryEnumerationMaxIntersectPerAnd\n  internalQueryEnumerationMaxOrSolutions\n  internalQueryEnumerationPreferLockstepOrEnumeration\n  internalQueryExecYieldIterations\n  internalQueryExecYieldPeriodMS\n  internalQueryExplainSizeThresholdBytes\n  internalQueryFacetBufferSizeBytes\n  internalQueryFacetMaxOutputDocSizeBytes\n  internalQueryForceIntersectionPlans\n  internalQueryIgnoreUnknownJSONSchemaKeywords\n  internalQueryJavaScriptFnTimeoutMillis\n  internalQueryJavaScriptHeapSizeLimitMB\n  internalQueryMaxAddToSetBytes\n  internalQueryMaxBlockingSortMemoryUsageBytes\n  internalQueryMaxDocValidationErrorConsideredValues\n  internalQueryMaxJsEmitBytes\n  internalQueryMaxPushBytes\n  internalQueryMaxRangeBytes\n  internalQueryMaxScansToExplode\n  internalQueryPlanEvaluationCollFraction\n  internalQueryPlanEvaluationMaxResults\n  internalQueryPlanEvaluationWorks\n  internalQueryPlanOrChildrenIndependently\n  internalQueryPlannerEnableHashIntersection\n  internalQueryPlannerEnableIndexIntersection\n  internalQueryPlannerGenerateCoveredWholeIndexScans\n  internalQueryPlannerMaxIndexedSolutions\n  internalQueryProhibitBlockingMergeOnMongoS\n  internalQueryProhibitMergingOnMongoS\n  internalQueryS2GeoCoarsestLevel\n  internalQueryS2GeoFinestLevel\n  internalQueryS2GeoMaxCells\n  internalQuerySlotBasedExecutionMaxStaticIndexScanIntervals\n  internalValidateFeaturesAsMaster\n  internalValidateFeaturesAsPrimary\n  javascriptProtection\n  journalCommitInterval\n  jsHeapLimitMB\n  loadRoutingTableOnStartup\n  localLogicalSessionTimeoutMinutes\n  localThresholdMs\n  logComponentVerbosity\n  logLevel\n  logicalSessionRefreshMillis\n  maxAcceptableLogicalClockDriftSecs\n  maxBSONDepth\n  maxCatchUpPercentageBeforeBlockingWrites\n  maxIndexBuildDrainBatchSize\n  maxIndexBuildDrainMemoryUsageMegabytes\n  maxIndexBuildMemoryUsageMegabytes\n  maxLogSizeKB\n  maxNumActiveUserIndexBuilds\n  maxNumSyncSourceChangesPerHour\n  maxNumberOfTransactionOperationsInSingleOplogEntry\n  maxOplogTruncationPointsAfterStartup\n  maxOplogTruncationPointsDuringStartup\n  maxSessions\n  maxSyncSourceLagSecs\n  maxTenantMigrationDonorServiceThreadPoolSize\n  maxTenantMigrationRecipientThreadPoolSize\n  maxTimeMSForHedgedReads\n  maxTransactionLockRequestTimeoutMillis\n  maxValidateMBperSec\n  maxValidateMemoryUsageMB\n  metadataRefreshInTransactionMaxWaitBehindCritSecMS\n  migrateCloneInsertionBatchDelayMS\n  migrateCloneInsertionBatchSize\n  migrationLockAcquisitionMaxWaitMS\n  minNumChunksForSessionsCollection\n  minOplogEntriesPerThread\n  minOplogTruncationPoints\n  minSnapshotHistoryWindowInSeconds\n  mirrorReads\n  mongosShutdownTimeoutMillisForSignaledShutdown\n  notablescan\n  numInitialSyncAttempts\n  numInitialSyncConnectAttempts\n  numInitialSyncOplogFindAttempts\n  ocspCacheSize\n  ocspEnabled\n  ocspStaplingRefreshPeriodSecs\n  ocspValidationRefreshPeriodSecs\n  opensslCipherConfig\n  opensslCipherSuiteConfig\n  opensslDiffieHellmanParameters\n  operationMemoryPoolBlockInitialSizeKB\n  operationMemoryPoolBlockMaxSizeKB\n  oplogApplicationEnforcesSteadyStateConstraints\n  oplogFetcherInitialSyncMaxFetcherRestarts\n  oplogFetcherSteadyStateMaxFetcherRestarts\n  oplogFetcherUsesExhaust\n  oplogInitialFindMaxSeconds\n  oplogNetworkTimeoutBufferSeconds\n  oplogRetriedFindMaxSeconds\n  oplogSamplingLogIntervalSeconds\n  oplogTruncationPointSizeMB\n  orphanCleanupDelaySecs\n  periodicNoopIntervalSecs\n  priorityTakeoverFreshnessWindowSeconds\n  processUmask\n  profileOperationResourceConsumptionMetrics\n  quiet\n  rangeDeleterBatchDelayMS\n  rangeDeleterBatchSize\n  readHedgingMode\n  receiveChunkWaitForRangeDeleterTimeoutMS\n  recoverFromOplogAsStandalone\n  recoverToOplogTimestamp\n  remainingReshardingOperationTimeThresholdMillis\n  replBatchLimitBytes\n  replBatchLimitOperations\n  replElectionTimeoutOffsetLimitFraction\n  replWriterMinThreadCount\n  replWriterThreadCount\n  replicaSetMonitorProtocol\n  reportOpWriteConcernCountersInServerStatus\n  requireApiVersion\n  reservedServiceExecutorRecursionLimit\n  reshardingCollectionClonerBatchSizeInBytes\n  reshardingCoordinatorServiceMaxThreadCount\n  reshardingCriticalSectionTimeoutMillis\n  reshardingDonorServiceMaxThreadCount\n  reshardingMinimumOperationDurationMillis\n  reshardingOplogApplierMaxLockRequestTimeoutMillis\n  reshardingOplogBatchLimitBytes\n  reshardingOplogBatchLimitOperations\n  reshardingOplogBatchTaskCount\n  reshardingRecipientServiceMaxThreadCount\n  reshardingTxnClonerProgressBatchSize\n  resumableIndexBuildMajorityOpTimeTimeoutMillis\n  rewriteStateChangeErrors\n  roleGraphInvalidationIsFatal\n  rollbackRemoteOplogQueryBatchSize\n  rollbackTimeLimitSecs\n  saslHostName\n  saslServiceName\n  saslauthdPath\n  scramIterationCount\n  scramSHA256IterationCount\n  scriptingEngineInterruptIntervalMS\n  shardedIndexConsistencyCheckIntervalMS\n  shutdownTimeoutMillisForSignaledShutdown\n  skipCorruptDocumentsWhenCloning\n  skipShardingConfigurationChecks\n  skipShellCursorFinalize\n  sslMode\n  sslWithholdClientCertificate\n  startupAuthSchemaValidation\n  startupRecoveryForRestore\n  storeFindAndModifyImagesInSideCollection\n  suppressNoTLSPeerCertificateWarning\n  syncdelay\n  synchronousServiceExecutorRecursionLimit\n  takeUnstableCheckpointOnShutdown\n  taskExecutorPoolSize\n  tcmallocAggressiveMemoryDecommit\n  tcmallocEnableMarkThreadTemporarilyIdle\n  tcmallocMaxTotalThreadCacheBytes\n  tcmallocReleaseRate\n  tcpFastOpenClient\n  tcpFastOpenQueueSize\n  tcpFastOpenServer\n  tenantApplierBatchSizeBytes\n  tenantApplierBatchSizeOps\n  tenantApplierThreadCount\n  tenantMigrationBlockingStateTimeoutMS\n  tenantMigrationDisableX509Auth\n  tenantMigrationExcludeDonorHostTimeoutMS\n  tenantMigrationExternalKeysRemovalBufferSecs\n  tenantMigrationGarbageCollectionDelayMS\n  tenantMigrationOplogBufferPeekCacheSize\n  tenantMigrationOplogFetcherBatchSize\n  testingDiagnosticsEnabled\n  testingSnapshotBehaviorInIsolation\n  timeseriesBucketMaxCount\n  timeseriesBucketMaxSize\n  timeseriesBucketsCollectionClusterById\n  timeseriesIdleBucketExpiryMemoryUsageThreshold\n  tlsCATrusts\n  tlsMode\n  tlsOCSPStaplingTimeoutSecs\n  tlsOCSPVerifyTimeoutSecs\n  tlsWithholdClientCertificate\n  tlsX509ClusterAuthDNOverride\n  tlsX509ExpirationWarningThresholdDays\n  totalUnitWriteSizeBytes\n  traceExceptions\n  traceWriteConflictExceptions\n  trafficRecordingDirectory\n  transactionLifetimeLimitSeconds\n  transactionSizeLimitBytes\n  ttlMonitorEnabled\n  ttlMonitorSleepSecs\n  useReadOnceCursorsForIndexBuilds\n  waitForSecondaryBeforeNoopWriteMS\n  warmMinConnectionsInShardingTaskExecutorPoolOnStartup\n  warmMinConnectionsInShardingTaskExecutorPoolOnStartupWaitMS\n  watchdogPeriodSeconds\n  wiredTigerConcurrentReadTransactions\n  wiredTigerConcurrentWriteTransactions\n  wiredTigerCursorCacheSize\n  wiredTigerEngineRuntimeConfig\n  wiredTigerFileHandleCloseIdleTime\n  wiredTigerFileHandleCloseMinimum\n  wiredTigerFileHandleCloseScanInterval\n  wiredTigerMaxCacheOverflowSizeGB\n  wiredTigerSessionCloseIdleTimeSecs\n  writePeriodicNoops\n{ getParameter:'*' } to get everything\n",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "getShardMap": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "lists the set of shards known to this instance",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "getShardVersion": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": " example: { getShardVersion : 'alleyinsider.foo'  } ",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "getnonce": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "internal",
            "requiresAuth": false,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "grantPrivilegesToRole": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "grantRolesToRole": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "grantRolesToUser": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "hello": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Check if this server is primary for a replica set\n{ hello : 1 }",
            "requiresAuth": false,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "hostInfo": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "returns information about the daemon's host",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "insert": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "insert documents",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "internalRenameIfOptionsAndIndexesMatch": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Internal command to rename and check collection options",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "invalidateUserCache": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "isMaster": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Check if this server is primary for a replica set\n{ isMaster : 1 }",
            "requiresAuth": false,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "killAllSessions": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "kill all logical sessions, for a user, and their operations",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "killAllSessionsByPattern": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "kill logical sessions by pattern",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "killCursors": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Kill a list of cursor ids",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "killOp": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "killSessions": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "kill a logical session and its operations",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "listCollections": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "list collections for this db",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "secondaryOverrideOk": true,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "listCommands": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "get a list of all db commands",
            "requiresAuth": false,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "listDatabases": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "{ listDatabases:1, [filter: \u003cfilterObject\u003e] [, nameOnly: true ] }\nlist databases on this server",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "secondaryOverrideOk": true,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "listIndexes": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "list indexes for a collection",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "secondaryOverrideOk": true,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "lockInfo": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "show all lock info on the server",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "logRotate": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "logout": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "de-authenticate",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "mapReduce": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Runs the mapReduce command. See http://dochub.mongodb.org/core/mapreduce for details.",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "mergeChunks": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Internal command to merge a contiguous range of chunks.\nUsage: { mergeChunks: \u003cns\u003e, epoch: \u003cepoch\u003e, bounds: [\u003cmin key\u003e, \u003cmax key\u003e] }",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "moveChunk": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "should not be calling this directly",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "ping": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "a way to check that the server is alive. responds immediately even if server is in a db lock.",
            "requiresAuth": false,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "planCacheClear": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Drops one or all plan cache entries in a collection.",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "secondaryOverrideOk": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "planCacheClearFilters": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Clears index filter for a single query shape or, if the query shape is omitted, all filters for the collection.",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "secondaryOverrideOk": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "planCacheListFilters": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Displays index filters for all query shapes in a collection.",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "secondaryOverrideOk": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "planCacheSetFilter": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Sets index filter for a query shape. Overrides existing filter.",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "secondaryOverrideOk": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "prepareTransaction": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Prepares a transaction on this shard; sent by a router or re-sent by the transaction commit coordinator for a cross-shard transaction",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "profile": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "controls the behaviour of the performance profiler, the fraction of eligible operations which are sampled for logging/profiling, and the threshold duration at which ops become eligible. See http://docs.mongodb.org/manual/reference/command/profile",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "reIndex": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "re-index a collection (can only be run on a standalone mongod)",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "recipientForgetMigration": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Interrupts tenant migration data sync and marks that the recipient's durable state machine may be garbage collected.",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "recipientSyncData": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Internal replica set command; instructs the recipient to sync data as part of a tenant migration.",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "refreshSessions": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "renew a set of logical sessions",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "renameCollection": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": " example: { renameCollection: foo.a, to: bar.b }",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "repairDatabase": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "This command has been removed. If you would like to compact your data, use the 'compact' command. If you would like to rebuild indexes, use the 'reIndex' command. If you need to recover data, please see the documentation for repairing your database offline: http://dochub.mongodb.org/core/repair",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetAbortPrimaryCatchUp": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "{ CmdReplSetAbortPrimaryCatchUp : 1 }\nAbort primary catch-up mode; immediately finish the transition to primary without fetching any further unreplicated writes from any other online nodes",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetFreeze": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "{ replSetFreeze : \u003cseconds\u003e }\n'freeze' state of member to the extent we can do that.  What this really means is that\nthis node will not attempt to become primary until the time period specified expires.\nYou can call again with {replSetFreeze:0} to unfreeze sooner.\nA process restart unfreezes the member also.\nhttp://dochub.mongodb.org/core/replicasetcommands",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetGetConfig": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Returns the current replica set configuration{ replSetGetConfig : 1 }\nhttp://dochub.mongodb.org/core/replicasetcommands",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetGetRBID": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetGetStatus": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Report status of a replica set from the POV of this server\n{ replSetGetStatus : 1 }\nhttp://dochub.mongodb.org/core/replicasetcommands",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetHeartbeat": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetInitiate": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Initiate/christen a replica set.\nhttp://dochub.mongodb.org/core/replicasetcommands",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetMaintenance": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "{ replSetMaintenance : bool }\nEnable or disable maintenance mode.",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetReconfig": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Adjust configuration of a replica set\n{ replSetReconfig : config_object }\nhttp://dochub.mongodb.org/core/replicasetcommands",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetRequestVotes": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetResizeOplog": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Resize oplog using size (in MBs) and optionally, retention (in terms of hours)",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetStepDown": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "{ replSetStepDown : \u003cseconds\u003e }\nStep down as primary.  Will not try to reelect self for the specified time period (1 minute if no numeric secs value specified, or secs is 0).\n(If another member with same priority takes over in the meantime, it will stay primary.)\nhttp://dochub.mongodb.org/core/replicasetcommands",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetStepUp": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetSyncFrom": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "{ replSetSyncFrom : \"host:port\" }\nChange who this member is syncing from. Note: This will interrupt and restart an in-progress initial sync.",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "replSetUpdatePosition": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "revokePrivilegesFromRole": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "revokeRolesFromRole": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "revokeRolesFromUser": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "rolesInfo": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "secondaryOverrideOk": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "rotateCertificates": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Rotate certificates for new SSL connections",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "saslContinue": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Subsequent steps in a SASL authentication conversation.",
            "requiresAuth": false,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "saslStart": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "First step in a SASL authentication conversation.",
            "requiresAuth": false,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "serverStatus": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "returns lots of administrative server statistics",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "setDefaultRWConcern": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "set the current read/write concern defaults (cluster-wide)",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "setFeatureCompatibilityVersion": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Set the featureCompatibilityVersion used by this cluster. If set to '4.4', then features introduced in versions greater than '4.4' will be disabled If set to '4.9', then features introduced in '5.0' will be disabled. If set to '5.0', then '5.0' features are enabled, and all nodes in the cluster must be binary version 5.0. See https://docs.mongodb.com/master/release-notes/4.4-compatibility/#feature-compatibility.",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "setFreeMonitoring": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "enable or disable Free Monitoring",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "setIndexCommitQuorum": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Resets the commitQuorum for the given index builds in a collection. Usage:\n{\n    setIndexCommitQuorum: \u003cstring\u003e collection name,\n    indexNames: array\u003cstring\u003e list of index names,\n    commitQuorum: \u003cstring|number|object\u003e option to define the required quorum for\n                  the index builds to commit\n}",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "setParameter": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "set administrative option(s)\n{ setParameter:1, \u003cparam\u003e:\u003cvalue\u003e }\nsupported:\n  AlwaysRecordTraffic\n  KeysRotationIntervalSec\n  ShardingTaskExecutorPoolHostTimeoutMS\n  ShardingTaskExecutorPoolMaxConnecting\n  ShardingTaskExecutorPoolMaxSize\n  ShardingTaskExecutorPoolMinSize\n  ShardingTaskExecutorPoolRefreshRequirementMS\n  ShardingTaskExecutorPoolRefreshTimeoutMS\n  ShardingTaskExecutorPoolReplicaSetMatching\n  TransactionRecordMinimumLifetimeMinutes\n  acceptApiVersion2\n  aggregateOperationResourceConsumptionMetrics\n  allowRolesFromX509Certificates\n  authSchemaVersion\n  authenticationMechanisms\n  authorizationManagerCacheSize\n  authorizationManagerPinnedUsers\n  authorizationManagerPinnedUsersRefreshIntervalMillis\n  automationServiceDescriptor\n  awsEC2InstanceMetadataUrl\n  awsECSInstanceMetadataUrl\n  bgSyncOplogFetcherBatchSize\n  changeSyncSourceThresholdMillis\n  clientCursorMonitorFrequencySecs\n  cloudFreeMonitoringEndpointURL\n  clusterAuthMode\n  collectionBulkLoaderBatchSizeInBytes\n  collectionClonerBatchSize\n  collectionClonerUsesExhaust\n  connPoolMaxConnsPerHost\n  connPoolMaxInUseConnsPerHost\n  connectTimeoutMs\n  coordinateCommitReturnImmediatelyAfterPersistingDecision\n  createRollbackDataFiles\n  cursorTimeoutMillis\n  deprecatedWireOpsWarningPeriodInSeconds\n  diagnosticDataCollectionDirectoryPath\n  diagnosticDataCollectionDirectorySizeMB\n  diagnosticDataCollectionEnableLatencyHistograms\n  diagnosticDataCollectionEnabled\n  diagnosticDataCollectionFileSizeMB\n  diagnosticDataCollectionPeriodMillis\n  diagnosticDataCollectionSamplesPerChunk\n  diagnosticDataCollectionSamplesPerInterimUpdate\n  diagnosticDataCollectionVerboseTCMalloc\n  disableJavaScriptJIT\n  disableLogicalSessionCacheRefresh\n  disableNonSSLConnectionLogging\n  disableNonTLSConnectionLogging\n  disableResumableRangeDeleter\n  disableSplitHorizonIPCheck\n  disabledSecureAllocatorDomains\n  documentUnitSizeBytes\n  enableDefaultWriteConcernUpdatesForInitiate\n  enableElectionHandoff\n  enableFinerGrainedCatalogCacheRefresh\n  enableFlowControl\n  enableIndexBuildCommitQuorum\n  enableLocalhostAuthBypass\n  enableOverrideClusterChainingSetting\n  enableReconfigRollbackCommittedWritesCheck\n  enableResumableIndexBuilds\n  enableSearchMeta\n  enableShardedIndexConsistencyCheck\n  enableTestCommands\n  enableTimeoutOfInactiveSessionCursors\n  enforceUserClusterSeparation\n  featureCompatibilityVersion\n  featureFlagBlender\n  featureFlagChangeStreamsOptimization\n  featureFlagDefaultReadConcernLocal\n  featureFlagDefaultWriteConcernMajority\n  featureFlagDotsAndDollars\n  featureFlagFryer\n  featureFlagLockFreeReads\n  featureFlagResharding\n  featureFlagRetryableFindAndModify\n  featureFlagSearchMeta\n  featureFlagShardedTimeSeries\n  featureFlagShardedTimeSeriesUpdateDelete\n  featureFlagShardingFullDDLSupport\n  featureFlagSpoon\n  featureFlagTenantMigrations\n  featureFlagTimeseriesCollection\n  featureFlagTimeseriesUpdatesAndDeletes\n  featureFlagToaster\n  featureFlagUseSecondaryDelaySecs\n  findChunksOnConfigTimeoutMS\n  fixedServiceExecutorRecursionLimit\n  fixedServiceExecutorThreadLimit\n  flowControlDecayConstant\n  flowControlFudgeFactor\n  flowControlMaxSamples\n  flowControlMinTicketsPerSecond\n  flowControlSamplePeriod\n  flowControlTargetLagSeconds\n  flowControlThresholdLagPercentage\n  flowControlTicketAdderConstant\n  flowControlTicketMultiplierConstant\n  flowControlWarnThresholdSeconds\n  forceRollbackViaRefetch\n  globalConnPoolIdleTimeoutMinutes\n  heapProfilingEnabled\n  heapProfilingSampleIntervalBytes\n  heartBeatFrequencyMs\n  honorSystemUmask\n  indexEntryUnitSizeBytes\n  initialServiceExecutorThreadingModel\n  initialSyncOplogBuffer\n  initialSyncOplogBufferPeekCacheSize\n  initialSyncOplogFetcherBatchSize\n  initialSyncSourceReadPreference\n  initialSyncTransientErrorRetryPeriodSeconds\n  internalDocumentSourceCursorBatchSizeBytes\n  internalDocumentSourceGroupMaxMemoryBytes\n  internalDocumentSourceLookupCacheSizeBytes\n  internalDocumentSourceSetWindowFieldsMaxMemoryBytes\n  internalGeoNearQuery2DMaxCoveringCells\n  internalGeoPredicateQuery2DMaxCoveringCells\n  internalIndexBuildBulkLoadYieldIterations\n  internalInsertMaxBatchSize\n  internalLookupStageIntermediateDocumentMaxSizeBytes\n  internalPipelineLengthLimit\n  internalProhibitShardOperationRetry\n  internalQueryAllowShardedLookup\n  internalQueryAlwaysMergeOnPrimaryShard\n  internalQueryAppendIdToSetWindowFieldsSort\n  internalQueryCacheDisableInactiveEntries\n  internalQueryCacheEvictionRatio\n  internalQueryCacheMaxEntriesPerCollection\n  internalQueryCacheMaxSizeBytesBeforeStripDebugInfo\n  internalQueryCacheSize\n  internalQueryCacheWorksGrowthCoefficient\n  internalQueryDefaultDOP\n  internalQueryDesugarWhereToFunction\n  internalQueryDisableExchange\n  internalQueryEnableCSTParser\n  internalQueryEnableLoggingV2OplogEntries\n  internalQueryEnableSlotBasedExecutionEngine\n  internalQueryEnumerationMaxIntersectPerAnd\n  internalQueryEnumerationMaxOrSolutions\n  internalQueryEnumerationPreferLockstepOrEnumeration\n  internalQueryExecYieldIterations\n  internalQueryExecYieldPeriodMS\n  internalQueryExplainSizeThresholdBytes\n  internalQueryFacetBufferSizeBytes\n  internalQueryFacetMaxOutputDocSizeBytes\n  internalQueryForceIntersectionPlans\n  internalQueryIgnoreUnknownJSONSchemaKeywords\n  internalQueryJavaScriptFnTimeoutMillis\n  internalQueryJavaScriptHeapSizeLimitMB\n  internalQueryMaxAddToSetBytes\n  internalQueryMaxBlockingSortMemoryUsageBytes\n  internalQueryMaxDocValidationErrorConsideredValues\n  internalQueryMaxJsEmitBytes\n  internalQueryMaxPushBytes\n  internalQueryMaxRangeBytes\n  internalQueryMaxScansToExplode\n  internalQueryPlanEvaluationCollFraction\n  internalQueryPlanEvaluationMaxResults\n  internalQueryPlanEvaluationWorks\n  internalQueryPlanOrChildrenIndependently\n  internalQueryPlannerEnableHashIntersection\n  internalQueryPlannerEnableIndexIntersection\n  internalQueryPlannerGenerateCoveredWholeIndexScans\n  internalQueryPlannerMaxIndexedSolutions\n  internalQueryProhibitBlockingMergeOnMongoS\n  internalQueryProhibitMergingOnMongoS\n  internalQueryS2GeoCoarsestLevel\n  internalQueryS2GeoFinestLevel\n  internalQueryS2GeoMaxCells\n  internalQuerySlotBasedExecutionMaxStaticIndexScanIntervals\n  internalValidateFeaturesAsMaster\n  internalValidateFeaturesAsPrimary\n  javascriptProtection\n  journalCommitInterval\n  jsHeapLimitMB\n  loadRoutingTableOnStartup\n  localLogicalSessionTimeoutMinutes\n  localThresholdMs\n  logComponentVerbosity\n  logLevel\n  logicalSessionRefreshMillis\n  maxAcceptableLogicalClockDriftSecs\n  maxBSONDepth\n  maxCatchUpPercentageBeforeBlockingWrites\n  maxIndexBuildDrainBatchSize\n  maxIndexBuildDrainMemoryUsageMegabytes\n  maxIndexBuildMemoryUsageMegabytes\n  maxLogSizeKB\n  maxNumActiveUserIndexBuilds\n  maxNumSyncSourceChangesPerHour\n  maxNumberOfTransactionOperationsInSingleOplogEntry\n  maxOplogTruncationPointsAfterStartup\n  maxOplogTruncationPointsDuringStartup\n  maxSessions\n  maxSyncSourceLagSecs\n  maxTenantMigrationDonorServiceThreadPoolSize\n  maxTenantMigrationRecipientThreadPoolSize\n  maxTimeMSForHedgedReads\n  maxTransactionLockRequestTimeoutMillis\n  maxValidateMBperSec\n  maxValidateMemoryUsageMB\n  metadataRefreshInTransactionMaxWaitBehindCritSecMS\n  migrateCloneInsertionBatchDelayMS\n  migrateCloneInsertionBatchSize\n  migrationLockAcquisitionMaxWaitMS\n  minNumChunksForSessionsCollection\n  minOplogEntriesPerThread\n  minOplogTruncationPoints\n  minSnapshotHistoryWindowInSeconds\n  mirrorReads\n  mongosShutdownTimeoutMillisForSignaledShutdown\n  notablescan\n  numInitialSyncAttempts\n  numInitialSyncConnectAttempts\n  numInitialSyncOplogFindAttempts\n  ocspCacheSize\n  ocspEnabled\n  ocspStaplingRefreshPeriodSecs\n  ocspValidationRefreshPeriodSecs\n  opensslCipherConfig\n  opensslCipherSuiteConfig\n  opensslDiffieHellmanParameters\n  operationMemoryPoolBlockInitialSizeKB\n  operationMemoryPoolBlockMaxSizeKB\n  oplogApplicationEnforcesSteadyStateConstraints\n  oplogFetcherInitialSyncMaxFetcherRestarts\n  oplogFetcherSteadyStateMaxFetcherRestarts\n  oplogFetcherUsesExhaust\n  oplogInitialFindMaxSeconds\n  oplogNetworkTimeoutBufferSeconds\n  oplogRetriedFindMaxSeconds\n  oplogSamplingLogIntervalSeconds\n  oplogTruncationPointSizeMB\n  orphanCleanupDelaySecs\n  periodicNoopIntervalSecs\n  priorityTakeoverFreshnessWindowSeconds\n  processUmask\n  profileOperationResourceConsumptionMetrics\n  quiet\n  rangeDeleterBatchDelayMS\n  rangeDeleterBatchSize\n  readHedgingMode\n  receiveChunkWaitForRangeDeleterTimeoutMS\n  recoverFromOplogAsStandalone\n  recoverToOplogTimestamp\n  remainingReshardingOperationTimeThresholdMillis\n  replBatchLimitBytes\n  replBatchLimitOperations\n  replElectionTimeoutOffsetLimitFraction\n  replWriterMinThreadCount\n  replWriterThreadCount\n  replicaSetMonitorProtocol\n  reportOpWriteConcernCountersInServerStatus\n  requireApiVersion\n  reservedServiceExecutorRecursionLimit\n  reshardingCollectionClonerBatchSizeInBytes\n  reshardingCoordinatorServiceMaxThreadCount\n  reshardingCriticalSectionTimeoutMillis\n  reshardingDonorServiceMaxThreadCount\n  reshardingMinimumOperationDurationMillis\n  reshardingOplogApplierMaxLockRequestTimeoutMillis\n  reshardingOplogBatchLimitBytes\n  reshardingOplogBatchLimitOperations\n  reshardingOplogBatchTaskCount\n  reshardingRecipientServiceMaxThreadCount\n  reshardingTxnClonerProgressBatchSize\n  resumableIndexBuildMajorityOpTimeTimeoutMillis\n  rewriteStateChangeErrors\n  roleGraphInvalidationIsFatal\n  rollbackRemoteOplogQueryBatchSize\n  rollbackTimeLimitSecs\n  saslHostName\n  saslServiceName\n  saslauthdPath\n  scramIterationCount\n  scramSHA256IterationCount\n  scriptingEngineInterruptIntervalMS\n  shardedIndexConsistencyCheckIntervalMS\n  shutdownTimeoutMillisForSignaledShutdown\n  skipCorruptDocumentsWhenCloning\n  skipShardingConfigurationChecks\n  skipShellCursorFinalize\n  sslMode\n  sslWithholdClientCertificate\n  startupAuthSchemaValidation\n  startupRecoveryForRestore\n  storeFindAndModifyImagesInSideCollection\n  suppressNoTLSPeerCertificateWarning\n  syncdelay\n  synchronousServiceExecutorRecursionLimit\n  takeUnstableCheckpointOnShutdown\n  taskExecutorPoolSize\n  tcmallocAggressiveMemoryDecommit\n  tcmallocEnableMarkThreadTemporarilyIdle\n  tcmallocMaxTotalThreadCacheBytes\n  tcmallocReleaseRate\n  tcpFastOpenClient\n  tcpFastOpenQueueSize\n  tcpFastOpenServer\n  tenantApplierBatchSizeBytes\n  tenantApplierBatchSizeOps\n  tenantApplierThreadCount\n  tenantMigrationBlockingStateTimeoutMS\n  tenantMigrationDisableX509Auth\n  tenantMigrationExcludeDonorHostTimeoutMS\n  tenantMigrationExternalKeysRemovalBufferSecs\n  tenantMigrationGarbageCollectionDelayMS\n  tenantMigrationOplogBufferPeekCacheSize\n  tenantMigrationOplogFetcherBatchSize\n  testingDiagnosticsEnabled\n  testingSnapshotBehaviorInIsolation\n  timeseriesBucketMaxCount\n  timeseriesBucketMaxSize\n  timeseriesBucketsCollectionClusterById\n  timeseriesIdleBucketExpiryMemoryUsageThreshold\n  tlsCATrusts\n  tlsMode\n  tlsOCSPStaplingTimeoutSecs\n  tlsOCSPVerifyTimeoutSecs\n  tlsWithholdClientCertificate\n  tlsX509ClusterAuthDNOverride\n  tlsX509ExpirationWarningThresholdDays\n  totalUnitWriteSizeBytes\n  traceExceptions\n  traceWriteConflictExceptions\n  trafficRecordingDirectory\n  transactionLifetimeLimitSeconds\n  transactionSizeLimitBytes\n  ttlMonitorEnabled\n  ttlMonitorSleepSecs\n  useReadOnceCursorsForIndexBuilds\n  waitForSecondaryBeforeNoopWriteMS\n  warmMinConnectionsInShardingTaskExecutorPoolOnStartup\n  warmMinConnectionsInShardingTaskExecutorPoolOnStartupWaitMS\n  watchdogPeriodSeconds\n  wiredTigerConcurrentReadTransactions\n  wiredTigerConcurrentWriteTransactions\n  wiredTigerCursorCacheSize\n  wiredTigerEngineRuntimeConfig\n  wiredTigerFileHandleCloseIdleTime\n  wiredTigerFileHandleCloseMinimum\n  wiredTigerFileHandleCloseScanInterval\n  wiredTigerMaxCacheOverflowSizeGB\n  wiredTigerSessionCloseIdleTimeSecs\n  writePeriodicNoops\n",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "setShardVersion": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "internal",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "shardingState": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "shutdown": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Shuts down the database. Must be run against the admin database and either (1) run from localhost or (2) run while authenticated with the shutdown privilege. If the node is the primary of a replica set, waits up to 'timeoutSecs' for an electable node to be caught up before stepping down. If 'force' is false and no electable node was able to catch up, does not shut down. If the node is in state SECONDARY after the attempted stepdown, any remaining time in 'timeoutSecs' is used for quiesce mode, where the database continues to allow operations to run, but directs clients to route new operations to other replica set members.",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "splitChunk": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "internal command usage only\nexample:\n { splitChunk:\"db.foo\" , keyPattern: {a:1} , min : {a:100} , max: {a:200} { splitKeys : [ {a:150} , ... ]}",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "splitVector": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Internal command.\nexamples:\n  { splitVector : \"blog.post\" , keyPattern:{x:1} , min:{x:10} , max:{x:20}, maxChunkSize:200 }\n  maxChunkSize unit in MBs\n  May optionally specify 'maxSplitPoints' and 'maxChunkObjects' to avoid traversing the whole chunk\n  \n  { splitVector : \"blog.post\" , keyPattern:{x:1} , min:{x:10} , max:{x:20}, force: true }\n  'force' will produce one split point even if data is small; defaults to false\nNOTE: This command may take a while to run",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "startRecordingTraffic": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "startSession": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "start a logical session",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "stopRecordingTraffic": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "top": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "usage by collection, in micros ",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "update": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "update documents",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [
              "1"
            ],
            "deprecatedApiVersions": []
          },
          "updateRole": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "updateUser": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "usersInfo": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "secondaryOverrideOk",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "no help defined",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": false,
            "secondaryOverrideOk": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "validate": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Validate contents of a namespace by scanning its data structures for correctness.\nThis is a slow operation.\n\tAdd {full: true} option to do a more thorough check.\n\tAdd {background: true} to validate in the background.\n\tAdd {repair: true} to run repair mode.\nCannot specify both {full: true, background: true}.",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "validateDBMetadata": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "validateDBMetadata checks that the stored metadata of a database/collection is valid within a particular API version. If 'db' parameter is specified, only runs validation against that database, if not the validation will be run againt all dbs. Similarly if 'collection' parameter is specified, the validation is only run against that collection, if not the validation is run against all collections.",
            "requiresAuth": true,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "voteCommitIndexBuild": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "Internal intra replica set command",
            "requiresAuth": true,
            "secondaryOk": false,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "waitForFailPoint": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "wait for a fail point to be entered a certain number of times",
            "requiresAuth": false,
            "secondaryOk": true,
            "adminOnly": true,
            "apiVersions": [],
            "deprecatedApiVersions": []
          },
          "whatsmyuri": {
            "$k": [
              "help",
              "requiresAuth",
              "secondaryOk",
              "adminOnly",
              "apiVersions",
              "deprecatedApiVersions"
            ],
            "help": "{whatsmyuri:1}",
            "requiresAuth": false,
            "secondaryOk": true,
            "adminOnly": false,
            "apiVersions": [],
            "deprecatedApiVersions": []
          }
        },
        "ok": {
          "$f": 1
        }
      },
      "Kind": 0
    }
  ]
}


