---
name: Docs Preview
on:
  pull_request_target:
    types:
      - labeled # for `trusted` label
      - unlabeled
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - cloudflare-pages # FIXME remove

# Do not run this workflow in parallel for any PR change or push to main
# to prevent XXX FIXME
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}

env:
  GOPATH: /home/runner/go
  GOCACHE: /home/runner/go/cache
  GOLANGCI_LINT_CACHE: /home/runner/go/cache/lint
  GOMODCACHE: /home/runner/go/mod
  GOPROXY: https://proxy.golang.org

jobs:
  build:
    # We can't easily download build results from the Docs workflow:
    # https://github.com/actions/download-artifact/issues/172
    # Just build them again instead.

    name: Build preview docs
    runs-on: ubuntu-22.04

    # FIXME enable
    # if: >
    #   contains(github.event.pull_request.labels.*.name, 'trust') &&
    #   !contains(github.event.pull_request.labels.*.name, 'no ci') &&
    #   contains(github.event.pull_request.labels.*.name, 'documentation')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Check LFS status
        if: false # TODO https://github.com/ActionsDesk/lfs-warning/issues/147
        uses: actionsdesk/lfs-warning@v3.2
        with:
          filesizelimit: 1MB

      - name: Setup Go
        uses: FerretDB/github-actions/setup-go@main
        with:
          cache-key: build

      - name: Install Task
        run: go generate -x
        working-directory: tools

      - name: Build tools
        run: bin/task env-pull

      - name: Build docs
        run: bin/task docs

      - name: Upload archive artifact
        uses: actions/upload-artifact@v3
        with:
          name: website
          path: website/build
          if-no-files-found: error

      - name: Check dirty
        run: |
          git status
          git diff --exit-code

  cloudflare:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-22.04

    needs: build

    # FIXME enable
    # if: >
    #   contains(github.event.pull_request.labels.*.name, 'trust') &&
    #   !contains(github.event.pull_request.labels.*.name, 'no ci') &&
    #   contains(github.event.pull_request.labels.*.name, 'documentation')

    environment:
      name: cloudflare-dev

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: website
          timeout: 300000 # 5*60*1000 milliseconds

      - run: ls -lR
